# This config was automatically generated from your source code
# Stacks detected: deps:node:.,test:jest:
version: 2.1
orbs:
  node: circleci/node@5
jobs:
  test-node:
    # Install node dependencies and run tests
    executor: node/default
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm install jest-junit
      - run:
          name: Create test-results directory
          command: mkdir -p ./test-results
      - run:
          name: Run tests
          command: npm run test --ci --runInBand --reporters=default --reporters=jest-junit
      - run:
          name: List test-results directory
          command: ls -la ./test-results
      - store_test_results:
          path: ./test-results/
  build:
    docker:
      - image: circleci/python:3.9  # Usa una imagen base con Docker preinstalado
    environment:
      DOCKER_IMAGE: abts17/cron-ticker:pez
    steps:
      - checkout  # Clona el repositorio

      - setup_remote_docker  # Habilita el entorno de Docker

      - run:
          name: Build Docker image
          command: |
            docker build -t $DOCKER_IMAGE .

      - run:
          name: Login to Docker Hub
          command: |
            echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin

      - run:
          name: Push Docker image
          command: |
            docker push $DOCKER_IMAGE
  deploy:
    # This is an example deploy job, not actually used by the workflow
    docker:
      - image: cimg/base:stable
    steps:
      # Replace this with steps to deploy to users
      - run:
          name: Check list
          command: ls -la
      - run:
          name: deploy
          command: ./deploy.sh
workflows:
  build-and-test:
    jobs:
      - test-node
      # - build:
      #     requires:
      #       - test-node
      - deploy:
          requires:
            - test-node
